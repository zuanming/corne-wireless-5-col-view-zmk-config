#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define AS(keycode) &as LS(keycode) keycode

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    hold-while-undecided;
    hold-trigger-on-release;
};

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    hold-while-undecided;
    flavor = "hold-preferred";
};

/ {

    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        one_shot: one_shot {
            compatible = "zmk,behavior-sticky-key";
            label = "ONE_SHOT";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
        };

        mt_l: mt_l {
            compatible = "zmk,behavior-hold-tap";
            label = "mt_l";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-while-undecided;
            hold-trigger-key-positions = <8 7 6 18 19 20 9 21 22 10 34 33 32 31 30>;
            tapping-term-ms = <270>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <230>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        mt_r: mt_r {
            compatible = "zmk,behavior-hold-tap";
            label = "mt_r";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <270>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <230>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 12 13 14 15 16 24 25 26 27 28 2 3 4>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
   AS(Q) AS(W) AS(E) AS(R) AS(T)     AS(Y)   AS(U)  AS(I)     AS(O)     AS(P)
   AS(A) AS(S) AS(D) AS(F) AS(G)     AS(H)   AS(J)  AS(K)     AS(L)     AS(SQT)
   AS(Z) AS(X) AS(C) AS(V) AS(B)     AS(N)   AS(M)  AS(COMMA) AS(DOT)   AS(SLASH)
&mt LCTRL ESC   &lt 1 TAB  &lt 4 SPACE    &lt 4 RETURN  &lt 2 BACKSPACE     &lt RSHFT DELETE
            >;
        };

        NumSym {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   AS(GRAVE)    &kp RS(N8)  &kp N7  &kp N8      &kp N9  &kp MINUS      
&kp LS(N5)        &kp LS(NUMBER_6)  &kp LS(N7)        AS(BACKSLASH)      AS(SEMI)     &kp SLASH   &kp N4  &kp N5      &kp N6  &kp RS(EQUAL)
&kp LS(N9)        &kp LS(N0)        AS(LEFT_BRACKET)  AS(RIGHT_BRACKET)  &none        &kp COMMA   &kp N1  &kp N2      &kp N3  &kp EQUAL
                           &none      &none      &none    &none       &kp N0  &kp PERIOD
            >;

            label = "NumSym";
        };

        Navigation {
            display-name = "Navigation";
            bindings = <
&none     &none     &none      &none      &none    &kp RC(Y)  &kp RC(V)       &kp RC(C)       &kp RC(PAGE_UP)  &kp RC(Z)
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT
&none     &none     &none      &none      &none    &none      &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP      &kp END
                           &none      &none      &none    &none      &none           &none
            >;

            label = "Nav";
        };

        Mouse {
            bindings = <
&none     &none     &none      &none      &none    &kp LC(Y)  &kp LC(V)       &kp LC(C)       &kp RC(X)     &kp RC(Z)
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  
&none     &none     &none      &none      &none    &none      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT
                               &none      &none    &none      &mkp LCLK       &mkp MCLK       &mkp RCLK
            >;

            label = "Mouse";
        };

        Function {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp CAPS              &kp C_BRIGHTNESS_INC  &kp C_MUTE  &kp C_VOL_DN      &kp C_VOL_UP  &bt BT_NXT 
&kp F5  &kp F6   &kp F7   &kp F8   &kp LC(LA(DELETE))    &kp C_BRIGHTNESS_DEC  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &bt BT_PRV  
&kp F9  &kp F10  &kp F11  &kp F12  &kp PRINTSCREEN       &none  &none            &none      &none     &bt BT_CLR
                        &none    &none    &none                 &none  &none            &none
            >;

            label = "Func";
        };
    };
};
