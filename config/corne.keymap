#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define AS(keycode) &as LS(keycode) keycode

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    hold-while-undecided;
    hold-trigger-on-release;
};

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    hold-while-undecided;
    flavor = "hold-preferred";
};

/ {

    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mt_l: mt_l {
            compatible = "zmk,behavior-hold-tap";
            label = "mt_l";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-while-undecided;
            hold-trigger-key-positions = <8 7 6 18 19 20 9 21 22 10 34 33 32 31 30>;
            tapping-term-ms = <270>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <230>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        mt_r: mt_r {
            compatible = "zmk,behavior-hold-tap";
            label = "mt_r";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <270>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <230>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 12 13 14 15 16 24 25 26 27 28 2 3 4>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
   AS(Q) AS(W) AS(E) AS(R) AS(T)     AS(Y)   AS(U)  AS(I)     AS(O)     AS(P)
   AS(A) AS(S) AS(D) AS(F) AS(G)     AS(H)   AS(J)  AS(K)     AS(L)     AS(SEMI)
   AS(Z) AS(X) AS(C) AS(V) AS(B)     AS(N)   AS(M)  AS(COMMA) AS(DOT)   AS(SLASH)
&mt LCTRL ESC   &lt 2 SPACE &kp LSHFT &kp RETURN &lt 2 BACKSPACE &lt 4 DELETE
            >;
        };

       NumSym {
            display-name = "NumSym";
            bindings = <
  &kp LS(N1)     &kp LS(N2)        &kp LS(N3)  &kp LS(N4)      &kp LS(N9)          &kp LS(N0)         &kp N7         &kp N8        &kp N9        &none                    
  &kp LS(N5)     &kp LS(NUMBER_6)  &kp LS(N7)  AS(BACKSLASH)   AS(LEFT_BRACKET)    AS(RIGHT_BRACKET)  &kp NUMBER_4   &kp N5        &kp NUMBER_6  AS(SQT)   
  &kp LS(EQUAL)  &kp LS(MINUS)     &kp LS(N8)  &kp LS(SLASH)   &none               &kp EQUAL          &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &none                    
                                   &trans      &trans          &trans              &trans             &kp N0         &none
            >;
        };

        Navigation {
            display-name = "Navigation";
            bindings = <
&none     &none             &none          &none              &none            &none      &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &none 
&none     &none             &none          &none              &none            &kp HOME   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT        &kp END
&none     &none             &none          &none              &none            &none      &none           &none           &none            &none 
                            &none          &mo 3              &none            &none      &none           &none
            >;

            label = "Nav";
        };

        Mouse {
            bindings = <
&none     &none             &msc SCRL_UP    &none            &none            &none      &none           &mmv MOVE_UP      &none             &none
&none     &msc SCRL_LEFT    &msc SCRL_DOWN  &msc SCRL_RIGHT  &none            &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT   &none
&none     &mkp LCLK         &mkp MCLK       &mkp LCLK        &none            &none      &none           &none             &none             &none
                            &none           &none            &none            &none      &none           &none 
            >;

            label = "Mouse";
        };

        Function {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp CAPS              &kp C_BRIGHTNESS_INC  &kp C_MUTE  &kp C_VOL_DN      &kp C_VOL_UP  &bt BT_NXT 
&kp F5  &kp F6   &kp F7   &kp F8   &kp LC(LA(DELETE))    &kp C_BRIGHTNESS_DEC  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &bt BT_PRV  
&kp F9  &kp F10  &kp F11  &kp F12  &kp PRINTSCREEN       &none  &none            &none      &none     &bt BT_CLR
                        &none    &none    &none                 &none  &none            &none
            >;

            label = "Func";
        };
    };
};
