#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <layouts/corne/foostan_corne_5col.dtsi>

#define &kp keycode) &as LS(keycode) keycode

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    hold-while-undecided;
    hold-trigger-on-release;
};

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    hold-while-undecided;
    flavor = "hold-preferred";
};

/ {
    chosen {
        zmk,matrix-transform = &five_column_transform;
    };
    

    combos {
        compatible = "zmk,combos";

        Caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <20 21 28 29>;
        };


        lshft {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 21>;
        };

        rshft {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <28 29>;
        };
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mt_tap: mt_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mt_hold_while_undecided: mt_hold_while_undecided {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HOLD_WHILE_UNDECIDED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
   &kp Q &kp W &kp E &kp R &kp T     &kp Y   &kp U  &kp I     &kp O     &kp P
   &kp A &kp S &kp D &kp F &kp G     &kp H   &kp J  &kp K     &kp L     &kp SEMI
   &kp Z &kp X &kp C &kp V &kp B     &kp N   &kp M  &kp COMMA &kp DOT   &kp SLASH
&mt LCTRL ESC   &lt 1 TAB &kp SPACE &kp RETURN &lt 2 BACKSPACE &kp DELETE
            >;
        };

       NumSym {
            display-name = "NumSym";
            bindings = <
  &kp LS(N1)     &kp LS(N2)        &kp LS(N3)  &kp LS(N4)      &kp LS(N9)          &kp LS(N0)         &kp N7         &kp N8        &kp N9        &none                    
  &kp LS(N5)     &kp LS(NUMBER_6)  &kp LS(N7)  &kp BACKSLASH)   &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp NUMBER_4   &kp N5        &kp NUMBER_6  &kp SQT   
  &kp LS(EQUAL)  &kp MINUS         &kp LS(N8)  &kp LS(SLASH)   &kp LS(MINUS)       &kp EQUAL          &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &none                    
                                   &trans      &trans          &trans              &mo 4             &kp N0         &none
            >;
        };

        Navigation {
            display-name = "Navigation";
            bindings = <
&none     &none             &none          &none              &none            &none      &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &none 
&none     &none             &none          &none              &none            &kp HOME   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT        &kp END
&none     &none             &none          &none              &none            &none      &none           &none           &none            &none 
                            &none          &mo 3              &none            &none      &none           &none
            >;

            label = "Nav";
        };

        Mouse {
            bindings = <
&none     &none             &msc SCRL_UP    &none            &none            &none      &none           &mmv MOVE_UP      &none             &none
&none     &msc SCRL_LEFT    &msc SCRL_DOWN  &msc SCRL_RIGHT  &none            &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT   &none
&none     &mkp RCLK         &mkp MCLK       &mkp LCLK        &none            &none      &none           &none             &none             &none
                            &none           &none            &none            &none      &none           &none 
            >;

            label = "Mouse";
        };

        Function {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp CAPS              &kp C_BRIGHTNESS_INC  &kp C_MUTE  &kp C_VOL_DN      &kp C_VOL_UP  &bt BT_NXT 
&kp F5  &kp F6   &kp F7   &kp F8   &kp LC(LA(DELETE))    &kp C_BRIGHTNESS_DEC  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &bt BT_PRV  
&kp F9  &kp F10  &kp F11  &kp F12  &kp PRINTSCREEN       &none  &none            &none      &none     &bt BT_CLR
                        &none    &none    &none                 &none  &none            &none
            >;

            label = "Func";
        };
    };
};
